[1/5] cd /home/ubuntu/esp/hello_world/build/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ubuntu/esp/hello_world/build/partition_table/partition-table.bin /home/ubuntu/esp/hello_world/build/hello_world.bin
hello_world.bin binary size 0x2ca00 bytes. Smallest app partition is 0x100000 bytes. 0xd3600 bytes (83%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/ubuntu/esp/hello_world/build/bootloader/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/ubuntu/esp/hello_world/build/bootloader/bootloader.bin
Bootloader binary size 0x5170 bytes. 0x2e90 bytes (36%) free.
[2/3] cd /home/ubuntu/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ubuntu/esp/esp-idf -D "SERIAL_TOOL=/home/ubuntu/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/ubuntu/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ubuntu/esp/hello_world/build -P /home/ubuntu/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 hello_world.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev3
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-C3 (QFN32) (revision v0.4)
Features: WiFi, BLE, Embedded Flash 4MB (XMC)
Crystal is 40MHz
MAC: 64:e8:33:d9:ea:f4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 20848 bytes to 12767...
Writing at 0x00000000... (100 %)
Wrote 20848 bytes (12767 compressed) at 0x00000000 in 0.3 seconds (effective 557.0 kbit/s)...
Hash of data verified.
Compressed 182784 bytes to 96007...
Writing at 0x00010000... (16 %)
Writing at 0x0001af07... (33 %)
Writing at 0x000214ad... (50 %)
Writing at 0x00028716... (66 %)
Writing at 0x0002f240... (83 %)
Writing at 0x00036808... (100 %)
Wrote 182784 bytes (96007 compressed) at 0x00010000 in 1.6 seconds (effective 932.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 646.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
